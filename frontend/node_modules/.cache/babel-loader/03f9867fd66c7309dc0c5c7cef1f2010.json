{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandu soman\\\\Downloads\\\\Projects\\\\hostpitalmanagementsystem\\\\frontend\\\\src\\\\Diagnose.js\";\nimport React, { Component } from 'react';\nimport { Box, Button, Heading, Form, TextArea, Grommet } from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\"\n    },\n    font: {\n      family: 'Lato'\n    }\n  }\n};\nvar diagnosis;\nvar prescription;\nvar id;\n\nconst AppBar = props => /*#__PURE__*/React.createElement(Box, Object.assign({\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  style: {\n    zIndex: '1'\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}));\n\nconst DiagnosisTextArea = () => {\n  const [value, setValue] = React.useState(\" \");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    diagnosis = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Diagnosis\"), /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter Diagnosis\",\n    label: \"Enter Diagnosis\",\n    value: value,\n    onChange: onChange,\n    style: {\n      width: \"50vw\",\n      height: \"12vw\"\n    },\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst PrescriptionTextArea = () => {\n  const [value, setValue] = React.useState(\" \");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    prescription = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Prescription\"), /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter Prescription\",\n    label: \"Enter Prescription\",\n    value: value,\n    style: {\n      width: \"50vw\",\n      height: \"12vw\"\n    },\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport class Diagnose extends Component {\n  constructor(props) {\n    super(props);\n    id = props.match.params.id;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grommet, {\n      theme: theme,\n      full: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: 'inherit',\n        textDecoration: 'inherit'\n      },\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      level: \"3\",\n      margin: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 76\n      }\n    }, \"HMS\"))), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: ({\n        value\n      }) => {\n        fetch(\"http://localhost:3001/diagnose?diagnosis=\" + diagnosis + \"&prescription=\" + prescription + \"&id=\" + id).then(() => {});\n        window.alert(\"Diagnosis Submitted!\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DiagnosisTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrescriptionTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Submit Diagnosis\",\n      type: \"submit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\nexport default Diagnose;","map":{"version":3,"sources":["C:/Users/Nandu soman/Downloads/Projects/hostpitalmanagementsystem/frontend/src/Diagnose.js"],"names":["React","Component","Box","Button","Heading","Form","TextArea","Grommet","theme","global","colors","brand","focus","active","font","family","diagnosis","prescription","id","AppBar","props","left","right","vertical","zIndex","DiagnosisTextArea","value","setValue","useState","onChange","event","target","width","height","PrescriptionTextArea","Diagnose","constructor","match","params","render","color","textDecoration","fetch","then","window","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Form,\r\n  TextArea,\r\n  Grommet\r\n} from 'grommet';\r\nimport './App.css';\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: \"#000000\",\r\n      active: \"#000000\",\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\nvar diagnosis;\r\nvar prescription;\r\nvar id;\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1' }}\r\n    {...props} />\r\n);\r\n\r\nconst DiagnosisTextArea = () => {\r\n  const [value, setValue] = React.useState(\" \");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    diagnosis = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <h4>Diagnosis</h4>\r\n      <TextArea\r\n        placeholder=\"Enter Diagnosis\"\r\n        label=\"Enter Diagnosis\"\r\n        value={value}\r\n        onChange={onChange}\r\n        style={{width:\"50vw\", height:\"12vw\"}}\r\n        fill\r\n        required />\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst PrescriptionTextArea = () => {\r\n  const [value, setValue] = React.useState(\" \");\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    prescription = event.target.value;\r\n  };\r\n  return (\r\n    <Grommet theme={theme}>\r\n        <h4>Prescription</h4>\r\n        <TextArea\r\n          placeholder=\"Enter Prescription\"\r\n          label=\"Enter Prescription\"\r\n          value={value}\r\n          style={{width:\"50vw\", height:\"12vw\"}}\r\n          onChange={onChange} fill\r\n          required />\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport class Diagnose extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    id = props.match.params.id;\r\n  }\r\n  render() {\r\n    return (\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HMS</Heading></a>\r\n        </AppBar>\r\n        <Box align=\"center\" gap=\"small\">\r\n          <Form\r\n            onSubmit={({ value }) => {\r\n              fetch(\"http://localhost:3001/diagnose?diagnosis=\" + diagnosis + \"&prescription=\" + prescription\r\n              + \"&id=\" + id).then(()=>{\r\n              })\r\n              window.alert(\"Diagnosis Submitted!\");\r\n            }}\r\n          >\r\n            <DiagnosisTextArea />\r\n            <PrescriptionTextArea />\r\n            <br />\r\n            <Box align=\"center\">\r\n            <Button\r\n              label=\"Submit Diagnosis\"\r\n              type=\"submit\"\r\n              primary\r\n            />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Grommet>\r\n    );\r\n  }\r\n}\r\nexport default Diagnose;"]},"metadata":{},"sourceType":"module"}