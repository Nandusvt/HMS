{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandu soman\\\\Downloads\\\\Projects\\\\hostpitalmanagementsystem\\\\frontend\\\\src\\\\schedulingAppt.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Schedule } from 'grommet-icons';\nimport { Box, Button, Heading, Form, Text, TextArea, Grommet, Calendar, DropButton, MaskedInput, Keyboard, Select } from 'grommet';\nimport './App.css';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#000000',\n      focus: \"#000000\",\n      active: \"#000000\"\n    },\n    font: {\n      family: 'Lato'\n    }\n  }\n};\nvar theDate;\nvar theTime;\nvar endTime;\nvar theConcerns;\nvar theSymptoms;\nvar theDoc;\n\nconst AppBar = props => /*#__PURE__*/React.createElement(Box, Object.assign({\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  style: {\n    zIndex: '1'\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}));\n\nconst DropContent = ({\n  date: initialDate,\n  time: initialTime,\n  onClose\n}) => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState();\n\n  const close = () => {\n    theDate = date;\n    theTime = time; //time is string, store it as [hour, min]\n\n    let parsedTime = theTime.split(\":\"); //parse hr string to in and add one hour to start hour\n\n    let startHour = parseInt(parsedTime[0], 10);\n    let endHour = startHour + 1; //rejoin into string\n\n    endTime = `${endHour}:00`;\n    console.log(endTime);\n    console.log(theDate);\n    console.log(theTime);\n    onClose(date || initialDate, time || initialTime);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    animate: false,\n    date: date || initialDate,\n    onSelect: setDate,\n    showAdjacentDays: false,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    pad: \"medium\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    required: true,\n    onEnter: event => {\n      event.preventDefault(); // so drop doesn't re-open\n\n      close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaskedInput, {\n    mask: [{\n      length: [1, 2],\n      options: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n      regexp: /^1[1-2]$|^[0-9]$/,\n      placeholder: \"hh\"\n    }, {\n      fixed: \":\"\n    }, {\n      length: 2,\n      options: [\"00\"],\n      regexp: /^[0-5][0-9]$|^[0-9]$/,\n      placeholder: \"mm\"\n    }],\n    value: time || initialTime,\n    name: \"maskedInput\",\n    onChange: event => setTime(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Done\",\n    onClick: close,\n    color: \"#00739D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst DateTimeDropButton = () => {\n  const [date, setDate] = React.useState();\n  const [time, setTime] = React.useState(\"\");\n  const [open, setOpen] = React.useState();\n\n  const onClose = (nextDate, nextTime) => {\n    setDate(nextDate);\n    setTime(nextTime);\n    setOpen(false);\n    setTimeout(() => setOpen(undefined), 1);\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    pad: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropButton, {\n    open: open,\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    dropContent: /*#__PURE__*/React.createElement(DropContent, {\n      date: date,\n      time: time,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    gap: \"small\",\n    align: \"center\",\n    pad: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: date ? undefined : \"dark-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, date ? `${new Date(date).toLocaleDateString()} ${time}` : \"Select date & time\"), /*#__PURE__*/React.createElement(Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst ConcernsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theConcerns = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    height: \"xsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter your concerns...\",\n    value: value,\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst SymptomsTextArea = () => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onChange = event => {\n    setValue(event.target.value);\n    theSymptoms = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    height: \"xsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Enter your symptoms...\",\n    value: value,\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction DoctorsDropdown() {\n  const [value, setValue] = useState();\n  const [doctorsList, setList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/docInfo\").then(res => res.json()).then(res => {\n      let arr = [];\n      res.data.forEach(i => {\n        let tmp = `${i.name} (${i.email})`;\n        arr.push(tmp);\n      });\n      setList(arr);\n    });\n  }, []);\n\n  const onChange = event => {\n    setValue(event.value);\n    let doc = event.value.match(/\\((.*)\\)/)[1];\n    theDoc = doc;\n  };\n\n  return /*#__PURE__*/React.createElement(Select, {\n    options: doctorsList,\n    value: value,\n    placeholder: \"Select Doctor\",\n    onChange: onChange,\n    fill: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  });\n}\n\nexport class SchedulingAppt extends Component {\n  constuctor() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grommet, {\n      theme: theme,\n      full: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: {\n        color: 'inherit',\n        textDecoration: 'inherit'\n      },\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      level: \"3\",\n      margin: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 76\n      }\n    }, \"HMS\"))), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      pad: \"small\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: ({\n        value\n      }) => {\n        //probably fetch uid here, add one\n        fetch(\"http://localhost:3001/userInSession\").then(res => res.json()).then(res => {\n          var string_json = JSON.stringify(res);\n          var email_json = JSON.parse(string_json);\n          let email_in_use = email_json.email;\n          fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc).then(res => res.json()).then(res => {\n            if (res.data[0]) {\n              window.alert(\"Appointment Clash! Try another doctor or date/time\");\n            } else {\n              fetch(\"http://localhost:3001/genApptUID\").then(res => res.json()).then(res => {\n                var string_json = JSON.stringify(res);\n                var uid_json = JSON.parse(string_json);\n                let gen_uid = uid_json.id;\n                console.log(gen_uid);\n                fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime + \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \"&id=\" + gen_uid + \"&doc=\" + theDoc).then(x => {\n                  fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then(x => {\n                    window.alert(\"Appointment successfully scheduled!\");\n                  });\n                });\n              });\n            }\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoctorsDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DateTimeDropButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ConcernsTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SymptomsTextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      pad: \"small\",\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Attempt To Schedule\",\n      type: \"submit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\nexport default SchedulingAppt;","map":{"version":3,"sources":["C:/Users/Nandu soman/Downloads/Projects/hostpitalmanagementsystem/frontend/src/schedulingAppt.js"],"names":["React","Component","useState","useEffect","Schedule","Box","Button","Heading","Form","Text","TextArea","Grommet","Calendar","DropButton","MaskedInput","Keyboard","Select","theme","global","colors","brand","focus","active","font","family","theDate","theTime","endTime","theConcerns","theSymptoms","theDoc","AppBar","props","left","right","vertical","zIndex","DropContent","date","initialDate","time","initialTime","onClose","setDate","setTime","close","parsedTime","split","startHour","parseInt","endHour","console","log","event","preventDefault","length","options","regexp","placeholder","fixed","target","value","DateTimeDropButton","open","setOpen","nextDate","nextTime","setTimeout","undefined","Date","toLocaleDateString","ConcernsTextArea","setValue","onChange","SymptomsTextArea","DoctorsDropdown","doctorsList","setList","fetch","then","res","json","arr","data","forEach","i","tmp","name","email","push","doc","match","SchedulingAppt","constuctor","render","color","textDecoration","string_json","JSON","stringify","email_json","parse","email_in_use","window","alert","uid_json","gen_uid","id","x"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport {\r\n  Schedule,\r\n} from 'grommet-icons';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Form,\r\n  Text,\r\n  TextArea,\r\n  Grommet,\r\n  Calendar,\r\n  DropButton,\r\n  MaskedInput,\r\n  Keyboard,\r\n  Select\r\n} from 'grommet';\r\nimport './App.css';\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: \"#000000\",\r\n      active: \"#000000\",\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\nvar theDate;\r\nvar theTime;\r\nvar endTime;\r\nvar theConcerns;\r\nvar theSymptoms;\r\nvar theDoc;\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1' }}\r\n    {...props} />\r\n);\r\n\r\nconst DropContent = ({ date: initialDate, time: initialTime, onClose }) => {\r\n  const [date, setDate] = React.useState();\r\n  const [time, setTime] = React.useState();\r\n\r\n  const close = () => {\r\n    theDate = date;\r\n    theTime = time;\r\n\r\n    //time is string, store it as [hour, min]\r\n    let parsedTime = theTime.split(\":\");\r\n\r\n    //parse hr string to in and add one hour to start hour\r\n    let startHour = parseInt(parsedTime[0], 10);\r\n    let endHour = startHour + 1;\r\n\r\n    //rejoin into string\r\n    endTime = `${endHour}:00`;\r\n\r\n    console.log(endTime);\r\n    console.log(theDate)\r\n    console.log(theTime);\r\n    onClose(date || initialDate, time || initialTime);\r\n  };\r\n\r\n  return (\r\n    <Box align=\"center\">\r\n      <Calendar\r\n        animate={false}\r\n        date={date || initialDate}\r\n        onSelect={setDate}\r\n        showAdjacentDays={false}\r\n        required\r\n      />\r\n      <Box flex={false} pad=\"medium\" gap=\"small\">\r\n        <Keyboard\r\n          required\r\n          onEnter={event => {\r\n            event.preventDefault(); // so drop doesn't re-open\r\n            close();\r\n          }}\r\n        >\r\n          <MaskedInput\r\n            mask={[\r\n              {\r\n                length: [1, 2],\r\n                options: [\r\n                  \"0\",\r\n                  \"1\",\r\n                  \"2\",\r\n                  \"3\",\r\n                  \"4\",\r\n                  \"5\",\r\n                  \"6\",\r\n                  \"7\",\r\n                  \"8\",\r\n                  \"9\",\r\n                  \"10\",\r\n                  \"11\",\r\n                  \"12\",\r\n                  \"13\",\r\n                  \"14\",\r\n                  \"15\",\r\n                  \"16\",\r\n                  \"17\",\r\n                  \"18\",\r\n                  \"19\",\r\n                  \"20\",\r\n                  \"21\",\r\n                  \"22\",\r\n                  \"23\",\r\n\r\n                ],\r\n                regexp: /^1[1-2]$|^[0-9]$/,\r\n                placeholder: \"hh\"\r\n              },\r\n              { fixed: \":\" },\r\n              {\r\n                length: 2,\r\n                options: [\"00\"],\r\n                regexp: /^[0-5][0-9]$|^[0-9]$/,\r\n                placeholder: \"mm\"\r\n              }\r\n            ]}\r\n            value={time || initialTime}\r\n            name=\"maskedInput\"\r\n            onChange={event => setTime(event.target.value)}\r\n            required\r\n          />\r\n        </Keyboard>\r\n        <Box flex={false}>\r\n          <Button label=\"Done\" onClick={close} color=\"#00739D\" />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DateTimeDropButton = () => {\r\n  const [date, setDate] = React.useState();\r\n  const [time, setTime] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const onClose = (nextDate, nextTime) => {\r\n    setDate(nextDate);\r\n    setTime(nextTime);\r\n    setOpen(false);\r\n    setTimeout(() => setOpen(undefined), 1);\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <Box align=\"center\" pad=\"large\">\r\n        <DropButton\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          dropContent={\r\n            <DropContent date={date} time={time} onClose={onClose} />\r\n          }\r\n        >\r\n          <Box direction=\"row\" gap=\"small\" align=\"center\" pad=\"small\">\r\n            <Text color={date ? undefined : \"dark-5\"}>\r\n              {date\r\n                ? `${new Date(date).toLocaleDateString()} ${time}`\r\n                : \"Select date & time\"}\r\n            </Text>\r\n            <Schedule />\r\n          </Box>\r\n        </DropButton>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst ConcernsTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    theConcerns = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <Box\r\n        width=\"medium\"\r\n        height=\"xsmall\"\r\n      >\r\n      <TextArea\r\n        placeholder=\"Enter your concerns...\"\r\n        value={value}\r\n        onChange={onChange}\r\n        fill\r\n        required />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst SymptomsTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    theSymptoms = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <Box\r\n        width=\"medium\"\r\n        height=\"xsmall\"\r\n      >\r\n        <TextArea\r\n          placeholder=\"Enter your symptoms...\"\r\n          value={value}\r\n          onChange={onChange} fill\r\n          required />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nfunction DoctorsDropdown() {\r\n  const [value, setValue] = useState();\r\n  const [doctorsList, setList] = useState([]);\r\n  useEffect(() => {    \r\n    fetch(\"http://localhost:3001/docInfo\")\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      let arr = []\r\n      res.data.forEach(i => {\r\n        let tmp = `${i.name} (${i.email})`;\r\n        arr.push(tmp);\r\n      });\r\n      setList(arr);\r\n    });\r\n  }, []);\r\n  const onChange = event => {\r\n    setValue(event.value);\r\n    let doc = event.value.match(/\\((.*)\\)/)[1];\r\n    theDoc = doc;\r\n  };\r\n  return (\r\n    <Select\r\n      options={doctorsList}\r\n      value={value}\r\n      placeholder=\"Select Doctor\"\r\n      onChange={onChange} fill\r\n      required\r\n    />\r\n  );\r\n}\r\n\r\nexport class SchedulingAppt extends Component {\r\n  constuctor() {\r\n  }\r\n  render() {\r\n    return (\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HMS</Heading></a>\r\n        </AppBar>\r\n        <Box align=\"center\" pad=\"small\" gap=\"small\">\r\n          <Form\r\n            onSubmit={({ value }) => {\r\n              //probably fetch uid here, add one\r\n              fetch(\"http://localhost:3001/userInSession\")\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                  var string_json = JSON.stringify(res);\r\n                  var email_json = JSON.parse(string_json);\r\n                  let email_in_use = email_json.email;\r\n                  fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                      if ((res.data[0])) {\r\n                        window.alert(\"Appointment Clash! Try another doctor or date/time\");\r\n                      } else {\r\n                        fetch(\"http://localhost:3001/genApptUID\")\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            var string_json = JSON.stringify(res);\r\n                            var uid_json = JSON.parse(string_json);\r\n                            let gen_uid = uid_json.id;\r\n                            console.log(gen_uid);\r\n                            fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime +\r\n                              \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \r\n                              \"&id=\" + gen_uid + \"&doc=\" + theDoc).then((x)=>{\r\n                              fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid +\r\n                                \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then((x)=>{\r\n                                  window.alert(\"Appointment successfully scheduled!\");\r\n                                });\r\n                            })\r\n                          });\r\n                      }\r\n                    });\r\n                });\r\n            }}\r\n          >\r\n            <Box align=\"center\" gap=\"small\">\r\n              <DoctorsDropdown />\r\n            </Box>\r\n            <DateTimeDropButton>\r\n            </DateTimeDropButton>\r\n            <ConcernsTextArea />\r\n            <br />\r\n            <SymptomsTextArea />\r\n            <br />\r\n            <Box align=\"center\" pad=\"small\" gap=\"small\">\r\n              <Button\r\n                label=\"Attempt To Schedule\"\r\n                type=\"submit\"\r\n                primary\r\n              />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Grommet>\r\n    );\r\n  }\r\n}\r\nexport default SchedulingAppt;"]},"metadata":{},"sourceType":"module"}